<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0052)http://www.cnblogs.com/youring2/category/385980.html -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML 
lang="zh-cn" xmlns="http://www.w3.org/1999/xhtml"><HEAD><META 
content="IE=10.0000" http-equiv="X-UA-Compatible">
 
<META http-equiv="Content-Type" content="text/html; charset=utf-8"> <TITLE> ORM 
- Qi Fei - 博客园</TITLE> <LINK href="ORM%20-%20Qi%20Fei%20-%20博客园_files/blog-common.css" 
rel="stylesheet" type="text/css"> <LINK href="ORM%20-%20Qi%20Fei%20-%20博客园_files/48401.css" 
rel="stylesheet" type="text/css"> <LINK title="RSS" href="http://www.cnblogs.com/youring2/rss" 
rel="alternate" type="application/rss+xml"> <LINK title="RSD" href="http://www.cnblogs.com/youring2/rsd.xml" 
rel="EditURI" type="application/rsd+xml"> <LINK href="http://www.cnblogs.com/youring2/wlwmanifest.xml" 
rel="wlwmanifest" type="application/wlwmanifest+xml"> 
<SCRIPT src="ORM%20-%20Qi%20Fei%20-%20博客园_files/jquery.js" type="text/javascript"></SCRIPT>
  
<SCRIPT type="text/javascript">var currentBlogApp = 'youring2', cb_enable_mathjax=false;</SCRIPT>
 
<SCRIPT src="ORM%20-%20Qi%20Fei%20-%20博客园_files/blog-common.js" type="text/javascript"></SCRIPT>
 
<META name="GENERATOR" content="MSHTML 11.00.9600.17105"></HEAD> 
<BODY><A name="top"></A> 
<DIV id="home">
<DIV id="header">
<DIV id="blogTitle"><!--done--> 
<DIV class="title"><A class="headermaintitle" id="Header1_HeaderTitle" href="http://www.cnblogs.com/youring2/">Qi 
Fei's Blog</A></DIV>
<DIV class="subtitle">
<DIV><A href="http://www.qeefee.com/">ExtJS教程</A> <SPAN>优秀是一种习惯</SPAN> <SPAN 
style="color: red;"><B>ExtJS、Ext.Net交流群：143202738</B></SPAN> </DIV></DIV></DIV><!--end: blogTitle 博客的标题和副标题 -->
	 
<DIV id="navigator">
<UL id="navList">
  <LI id="nav_sitehome"><A class="menu" id="MyLinks1_HomeLink" href="http://www.cnblogs.com/">博客园</A></LI>
  <LI id="nav_myhome"><A class="menu" id="MyLinks1_MyHomeLink" href="http://www.cnblogs.com/youring2/">首页</A></LI>
  <LI id="nav_q"><A class="menu" href="http://q.cnblogs.com/">博问</A></LI>
  <LI id="nav_ing"><A class="menu" 
  href="http://home.cnblogs.com/ing/">闪存</A></LI>
  <LI id="nav_newpost"><A class="menu" id="MyLinks1_NewPostLink" href="http://i.cnblogs.com/EditPosts.aspx?opt=1" 
  rel="nofollow">新随笔</A></LI>
  <LI id="nav_contact"><A class="menu" id="MyLinks1_ContactLink" href="http://space.cnblogs.com/msg/send/Qi+Fei" 
  rel="nofollow">联系</A></LI>
  <LI id="nav_rss"><A class="menu" id="MyLinks1_Syndication" href="http://www.cnblogs.com/youring2/rss">订阅</A> <!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/youring2/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></LI>
  <LI id="nav_admin"><A class="menu" id="MyLinks1_Admin" href="http://i.cnblogs.com/" 
  rel="nofollow">管理</A></LI></UL>
<DIV class="blogStats"><!--done--> 随笔-294&nbsp; 文章-0&nbsp; 评论-385&nbsp;			
		 </DIV><!--end: blogStats -->	 </DIV><!--end: navigator 博客导航栏 --> </DIV><!--end: header 头部 --> 
<DIV id="main">
<DIV id="mainContent">
<DIV class="forFlow"><!--done--> 
<DIV class="entrylist">
<H1 class="entrylistTitle">ORM</H1>
<DIV class="entrylistDescription"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_0" 
href="http://www.cnblogs.com/youring2/archive/2013/05/08/3066360.html">PetaPoco支持Dynamic（ExpandoObject）类型参数</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: 
修改ParametersHelper类，添加ExpandoObject的类型判断吧，修改后的代码如下：// PetaPoco - A Tiny ORMish 
thing for your POCO's.// Copyright © 2011-2012 Topten Software. All Rights 
Reserved. using System;using System.Collections.Generic;using 
System.Text.RegularExpressions;using System.Text;namespace PetaPoco.Interna<A 
class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2013/05/08/3066360.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2013/05/08/3066360.html">2013-05-08 
11:05</A> Qi Fei 阅读(397) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2013/05/08/3066360.html#FeedBack">评论 
(6)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=3066360" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_1" 
href="http://www.cnblogs.com/youring2/archive/2012/07/26/2610035.html">C#通用类型转换 
Convert.ChangeType</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: static public object ChangeType(object value, Type 
type) { if (value == null &amp;&amp; type.IsGenericType) return 
Activator.CreateInstance(type); if (value == null) return null; if (type == 
value.GetType()) return value; if (type.IsEnum) ...<A class="c_b_p_desc_readmore" 
href="http://www.cnblogs.com/youring2/archive/2012/07/26/2610035.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/07/26/2610035.html">2012-07-26 
14:38</A> Qi Fei 阅读(1926) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/07/26/2610035.html#FeedBack">评论 
(1)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2610035" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_2" 
href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556460.html">为PetaPoco添加实体模板</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: 
Brad为我们提供了T4模板，因为公司一直在使用CodeSmith，故为其写了一个CodeSmith的模板，代码如下：&lt;%-- 
Name:EntityTemplatesAuthor:Qi Fei Description:Generate a entity file in 
C#--%&gt;&lt;%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" 
Inherits="" Debug="False" Description=&amp;<A class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556460.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556460.html">2012-06-20 
16:42</A> Qi Fei 阅读(787) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556460.html#FeedBack">评论 
(0)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2556460" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_3" 
href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556456.html">为PetaPoco添加Fill方法</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: 
因为公司框架中的很多地方用到DataTable，直接将DataTable作为数据源绑定到DataGridView，所以为PetaPoco添加了两个方法，一个是用以填充单个DataTable，一个是用以多结果集时填充DataSet。 
#region operation Fill /// &lt;summary&gt; /// 填充一个DataSet /// &lt;/summary&gt; 
/// &lt;param name="ds"&gt;引用的DataSet&lt;/param&gt; /// &lt;param 
name="sql"&gt;sql语<A class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556456.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556456.html">2012-06-20 
16:39</A> Qi Fei 阅读(831) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556456.html#FeedBack">评论 
(1)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2556456" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_4" 
href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556440.html">PetaPoco的默认映射</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: PetaPoco的映射需要继承IMapper接口，该接口提供了四个方法：TableInfo 
GetTableInfo(Type pocoType);ColumnInfo GetColumnInfo(PropertyInfo 
pocoProperty);Func&lt;object, object&gt; GetFromDbConverter(PropertyInfo 
TargetProperty, Type SourceType);Func&lt;object, object&gt; 
GetToDbConverter(PropertyInfo SourceProperty);Brad提供了一个<A class="c_b_p_desc_readmore" 
href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556440.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556440.html">2012-06-20 
16:30</A> Qi Fei 阅读(1238) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/06/20/2556440.html#FeedBack">评论 
(0)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2556440" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_5" 
href="http://www.cnblogs.com/youring2/archive/2012/06/19/2554976.html">PetaPoco的几个特性</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: 
在PetaPoco中，Brad并没有定义太多Attribute来修饰Models或Fields。这些为数不多的几个Attribute如下：ColumnAttributeExplicitColumnsAttributeIgnoreAttributePrimaryKeyAttributeResultColumnAttributeTableNameAttributeExplicitColumnsAttribute 
和 
ColumnAttribute使用ExplicitColumnsAttribute修饰的类必须为每一个属性必须使用ColumnAttribute来修饰。例如： 
[Explicit...<A class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2012/06/19/2554976.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/06/19/2554976.html">2012-06-19 
16:58</A> Qi Fei 阅读(838) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/06/19/2554976.html#FeedBack">评论 
(0)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2554976" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_6" 
href="http://www.cnblogs.com/youring2/archive/2012/06/04/2532130.html">【译】微型ORM：PetaPoco【不完整的翻译】</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: PetaPoco是一款适用于.Net 
和Mono的微小、快速、单文件的微型ORM。PetaPoco有以下特色：微小，没有依赖项……单个的C#文件可以方便的添加到任何项目中。工作于严格的没有装饰的Poco类，和几乎全部加了特性的Poco类Insert/Delete/Update/Save 
and IsNew 
等帮助方法。分页支持：自动得到总行数和数据支持简单的事务更好的支持参数替换，包括从对象属性中抓取命名的参数。很好的性能，剔除了Linq，并通过Dynamic方法快速的为属性赋值T4模板自动生成Poco类查询语言是Sql……不支持别扭的fluent或Linq语法（仁者见仁，智者见智）包含一个低<A 
class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2012/06/04/2532130.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/06/04/2532130.html">2012-06-04 
16:52</A> Qi Fei 阅读(5476) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/06/04/2532130.html#FeedBack">评论 
(3)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2532130" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_7" 
href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514962.html">EF 
Code-First中的事务</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: 对于一个ORM框架，支持事务操作是必须的。EF 
Code-Frist本身就是支持事务的。我们的每一次SaveChanges就是一个事务操作，只需要在所有更改都完成后，调用这个方法就可以了。如果你不愿意，网上还有人给出了手动的开启事务的代码（我没有测试过）：DbConnection 
con = ((IObjectContextAdapter)ctx).ObjectContext.Connection;con.Open();using 
(var tran = con.BeginTransaction()){// 这里才是事务中的代码tran.Commit();}con.Close(); 
以上都是针<A class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514962.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514962.html">2012-05-23 
16:27</A> Qi Fei 阅读(1942) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514962.html#FeedBack">评论 
(0)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2514962" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_8" 
href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514442.html">EF 
Code-First CRUD操作</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: 
网上很多的教程都是跟MVC3绑在一起来讲解的，如果我们抛开MVC3，该如何使用呢？首先新建一个控制台应用程序，我们把它命名为：EFCodeFirst-Books第二步，添加EntityFramework的引用。不要说你还不回使用NuGet，如果真的不会就去问度娘。在NuGet 
控制台输入Install-Package 
EntityFramework，NuGet会为我们引用最新发布的EF版本，目前的版本是4.3。第三步，添加实体类。我新建了一个Models文件夹，在里面添加了Book类，类的定义如下：using 
System;using System.Collections.Generic;us<A class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514442.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514442.html">2012-05-23 
11:02</A> Qi Fei 阅读(652) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2012/05/23/2514442.html#FeedBack">评论 
(0)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2514442" rel="nofollow">编辑</A></DIV></DIV>
<DIV class="postSeparator"></DIV>
<DIV class="entrylistItem">
<DIV class="entrylistPosttitle"><A class="entrylistItemTitle" id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_9" 
href="http://www.cnblogs.com/youring2/archive/2011/06/26/2090424.html">Entity 
Framework 4.1 Code-First 学习笔记</A></DIV>
<DIV class="entrylistPostSummary">
<DIV class="c_b_p_desc">摘要: CodeFirst提供了一种先从代码开始工作，并根据代码直接生成数据库的工作方式。Entity 
Framework 
4.1在你的实体不派生自任何基类、不添加任何特性的时候正常的附加数据库。另外呢，实体的属性也可以添加一些标签，但这些标签不是必须的。下面是一个简单的示例：publicclass 
Order { publicint OrderID { get; set; } publicstring OrderTitle { get; set; } 
publicstring CustomerName { get; set; } public DateTime TransactionDate {..<A 
class="c_b_p_desc_readmore" href="http://www.cnblogs.com/youring2/archive/2011/06/26/2090424.html">阅读全文</A></DIV></DIV>
<DIV class="entrylistItemPostDesc">posted @ <A title="permalink" href="http://www.cnblogs.com/youring2/archive/2011/06/26/2090424.html">2011-06-26 
15:27</A> Qi Fei 阅读(5768) | <A title="comments, pingbacks, trackbacks" href="http://www.cnblogs.com/youring2/archive/2011/06/26/2090424.html#FeedBack">评论 
(0)</A>  <A href="http://i.cnblogs.com/EditPosts.aspx?postid=2090424" rel="nofollow">编辑</A></DIV></DIV>
<P></P></DIV></DIV><!--end: forFlow -->	 </DIV><!--end: mainContent 主体内容容器-->	 
<DIV id="sideBar">
<DIV id="sideBarMain"><!--done--> 
<DIV class="newsItem">
<H3 class="catListTitle">公告</H3>
<DIV id="blog-news"></DIV>
<SCRIPT type="text/javascript">loadBlogNews();</SCRIPT>
 </DIV>
<DIV id="calendar">
<DIV id="blog-calendar" style="display: none;"></DIV>
<SCRIPT type="text/javascript">loadBlogDefaultCalendar();</SCRIPT>
</DIV>
<DIV id="leftcontentcontainer">
<DIV id="blog-sidecolumn"></DIV>
<SCRIPT type="text/javascript">loadBlogSideColumn();</SCRIPT>
			 </DIV></DIV><!--end: sideBarMain -->	 </DIV><!--end: sideBar 侧边栏容器 -->	 
<DIV class="clear"></DIV></DIV><!--end: main -->	 
<DIV class="clear"></DIV>
<DIV id="footer"><!--done--> Copyright ©2014 Qi Fei	 </DIV><!--end: footer --> 
</DIV><!--end: home 自定义的最大容器 --> <!--PageEndHtml Block Begin--> 
<DIV id="PostHeaderAD" style="margin: 10px 0px;">
<SCRIPT src="ORM%20-%20Qi%20Fei%20-%20博客园_files/adsbygoogle.js" async=""></SCRIPT>
 <!-- cnblogs 文章开头 --> <INS class="adsbygoogle" style="width: 728px; height: 90px; display: inline-block;" 
data-ad-slot="1317546034" data-ad-client="ca-pub-6136815705639265"></INS> 
<SCRIPT>
(adsbygoogle = window.adsbygoogle || []).push({});
</SCRIPT>
 </DIV>
<DIV style="display: none;">
<SCRIPT type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F1769ab8da2ea6b7e648469d8d5adf59a' type='text/javascript'%3E%3C/script%3E"));
<!-- 将广告插入到顶部 -->
var postHeaderAD = $("#PostHeaderAD");
var container = $("#cnblogs_post_body");
container.prepend(postHeaderAD);
</SCRIPT>
 </DIV><!--PageEndHtml Block End--> </BODY></HTML>
